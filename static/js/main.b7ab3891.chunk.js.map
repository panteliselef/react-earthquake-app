{"version":3,"sources":["Images/crosshairs-gps.svg","Tools/magnitudeColors.js","Context/QuakeContext.js","Tools/DegreesToRadians.js","Components/QuakeItem.js","Components/QuakeList.js","Context/SearchContext.js","Tools/EarthQuakeUrl.js","Components/SearchBar.js","Components/UserLocation.js","Reducers/AppReducer.js","Components/ToastStack.js","Components/OfflinePopup.js","Components/MyApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","magnitudeColors","minValue","maxValue","color","matchColorToMag","mag","filter","item","hexToRgb","hex","result","exec","concat","parseInt","React","createContext","dispatch","viewport","currLocation","quakes","degreesToRadians","degrees","Math","PI","distanceInKmBetweenEarthCoordinates","lat1","lon1","lat2","lon2","dLat","dLon","a","sin","cos","atan2","sqrt","QuakeItem","props","quake","properties","geometry","_useContext","useContext","QuakeContext","e","Date","time","react_default","createElement","id","className","style","backgroundColor","margin","marginBottom","place","toLocaleString","coordinates","latitude","longitude","toFixed","alt","src","locationIcon","width","height","dist_default","onClick","type","payload","feature","Object","objectSpread","zoom","children","QuakeList","downloadingData","map","Components_QuakeItem","key","setFetchedData","EarthQuakeUrl","parameters","arguments","length","undefined","classCallCheck","this","starttime","getOwnPropertyNames","values","prop","i","flat","join","SearchBar","_useState","useState","_useState2","slicedToArray","suggestions","setSuggestions","SearchContext","toasts","suggestionsRef","createRef","getEarlierDate","numOfDays","today","setDate","getDate","getFullYear","getMonth","onBlur","console","log","current","visibility","lib","xsOffset","sm","smOffset","mdOffset","md","xs","onFocus","onInput","target","value","fetch","process","then","response","json","data","features","onUserInput","placeholder","ref","sug","selectedPlace","parentElement","previousSibling","matching_place_name","place_name","center","url","minlatitude","bbox","minlongitude","maxlatitude","maxlongitude","limit","orderby","getUrl","toConsumableArray","timestame","catch","error","selectPlace","UserLocation","isEnable","setEnable","getLocation","navigator","geolocation","getCurrentPosition","position","document","getElementById","display","coords","getElementsByClassName","setAttribute","viewBox","fill","d","initState","fetchedData","selectedQuake","selectedRegion","AppReducer","state","action","ToastStack","toast","timestamp","onAnimationEndCapture","OfflinePopup","window","location","reload","MyApp","_useReducer","useReducer","_useReducer2","_useState3","_useState4","appIsOffline","setAppIsOffline","setInterval","onLine","useEffect","query","URLSearchParams","search","get","fluid","react_map_gl_esm","accessToken","mapStyle","onViewportChange","react_map_gl_cluster_esm","raduis","extent","nodeSize","component","_ref","pointCount","preventDefault","onClose","title","showCompass","showZoom","Components_OfflinePopup","Provider","Components_SearchBar","Components_ToastStack","Components_UserLocation","Components_QuakeList","App","react_router_dom","react_router","path","Boolean","hostname","match","ReactDOM","render","src_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7ab3891.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crosshairs-gps.27b7eeac.svg\";","// <!-- Color for an earthquake with magnitude 0 and 2 -->\n//  <color name=\"magnitude1\">#4A7BA7</color>\n\n//  <!-- Magnitude circle color for an earthquake with magnitude between 2 and 3 -->\n//  <color name=\"magnitude2\">#04B4B3</color>\n\n//  <!-- Magnitude circle color for an earthquake with magnitude between 3 and 4 -->\n//  <color name=\"magnitude3\">#10CAC9</color>\n\n//  <!-- Magnitude circle color for an earthquake with magnitude between 4 and 5 -->\n//  <color name=\"magnitude4\">#F5A623</color>\n\n//  <!-- Magnitude circle color for an earthquake with magnitude between 5 and 6 -->\n//  <color name=\"magnitude5\">#FF7D50</color>\n\n//  <!-- Magnitude circle color for an earthquake with magnitude between 6 and 7 -->\n//  <color name=\"magnitude6\">#FC6644</color>\n\n//  <!-- Magnitude circle color for an earthquake with magnitude between 7 and 8 -->\n//  <color name=\"magnitude7\">#E75F40</color>\n\n//  <!-- Magnitude circle color for an earthquake with magnitude between 8 and 9 -->\n//  <color name=\"magnitude8\">#E13A20</color>\n\n//  <!-- Magnitude circle color for an earthquake with magnitude between 9 and 10 -->\n//  <color name=\"magnitude9\">#D93218</color>\n\n//  <!-- Magnitude circle color for an earthquake with magnitude over 10 -->\n//  <color name=\"magnitude10plus\">#C03823</color>\n\n// var magnitudeColors = {\n// \tmagnitude1: {\n// \t\tminValue: 0,\n// \t\tmaxValue: 2,\n// \t\tcolor: '#4A7BA7'\n// \t},\n// \tmagnitude2: {\n// \t\tminValue: 2,\n// \t\tmaxValue: 3,\n// \t\tcolor: '#04B4B3'\n// \t},\n// \tmagnitude3: {\n// \t\tminValue: 3,\n// \t\tmaxValue: 4,\n// \t\tcolor: '#10CAC9'\n// \t},\n// \tmagnitude4: {\n// \t\tminValue: 4,\n// \t\tmaxValue: 5,\n// \t\tcolor: '#F5A623'\n// \t},\n// \tmagnitude5: {\n// \t\tminValue: 5,\n// \t\tmaxValue: 6,\n// \t\tcolor: '#FF7D50'\n// \t},\n// \tmagnitude6: {\n// \t\tminValue: 6,\n// \t\tmaxValue: 7,\n// \t\tcolor: '#FC6644'\n// \t},\n// \tmagnitude7: {\n// \t\tminValue: 7,\n// \t\tmaxValue: 8,\n// \t\tcolor: '#E75F40'\n//   },\n//   magnitude8: {\n// \t\tminValue: 8,\n// \t\tmaxValue: 9,\n// \t\tcolor: '#E13A20'\n//   },\n//   magnitude9: {\n// \t\tminValue: 9,\n// \t\tmaxValue: 10,\n// \t\tcolor: '#D93218'\n//   },\n//   magnitude10: {\n// \t\tminValue: 10,\n// \t\tmaxValue: 20,\n// \t\tcolor: '#C03823'\n// \t},\n// };\n\nconst magnitudeColors = [\n\t{\n\t\tminValue: 0,\n\t\tmaxValue: 2,\n\t\tcolor: '#4A7BA7'\n\t},\n\t{\n\t\tminValue: 2,\n\t\tmaxValue: 3,\n\t\tcolor: '#04B4B3'\n\t},\n\t{\n\t\tminValue: 3,\n\t\tmaxValue: 4,\n\t\tcolor: '#10CAC9'\n\t},\n\t{\n\t\tminValue: 4,\n\t\tmaxValue: 5,\n\t\tcolor: '#F5A623'\n\t},\n\t{\n\t\tminValue: 5,\n\t\tmaxValue: 6,\n\t\tcolor: '#FF7D50'\n\t},\n\t{\n\t\tminValue: 6,\n\t\tmaxValue: 7,\n\t\tcolor: '#FC6644'\n\t},\n\t{\n\t\tminValue: 7,\n\t\tmaxValue: 8,\n\t\tcolor: '#E75F40'\n\t},\n\t{\n\t\tminValue: 8,\n\t\tmaxValue: 9,\n\t\tcolor: '#E13A20'\n\t},\n\t{\n\t\tminValue: 9,\n\t\tmaxValue: 10,\n\t\tcolor: '#D93218'\n\t},\n\t{\n\t\tminValue: 10,\n\t\tmaxValue: 20,\n\t\tcolor: '#C03823'\n\t}\n];\n\nexport const matchColorToMag = (mag) => {\n\treturn magnitudeColors.filter((item) => {\n\t\treturn item.minValue <= mag && item.maxValue > mag;\n\t});\n};\n\nexport const hexToRgb = (hex) => {\n\tlet result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\treturn result ? `rgba(${parseInt(result[1], 16)},${parseInt(result[2], 16)},${parseInt(result[3], 16)},0.4)` : null;\n};\n\nexport default magnitudeColors;","import React from 'react';\n\nexport default React.createContext({\n\tdispatch: ()=>{},\n\tviewport: {},\n\tcurrLocation: {},\n\tquakes:[]\n});\n","function degreesToRadians(degrees) {\n  return degrees * Math.PI / 180;\n}\n\nfunction distanceInKmBetweenEarthCoordinates(lat1, lon1, lat2, lon2) {\n  var earthRadiusKm = 6371;\n\n  var dLat = degreesToRadians(lat2-lat1);\n  var dLon = degreesToRadians(lon2-lon1);\n\n  lat1 = degreesToRadians(lat1);\n  lat2 = degreesToRadians(lat2);\n\n  var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n          Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n  return earthRadiusKm * c;\n}\n\nexport default distanceInKmBetweenEarthCoordinates;","import React, { useContext } from 'react';\nimport QuakeContext from '../Context/QuakeContext';\nimport { matchColorToMag, hexToRgb } from '../Tools/magnitudeColors';\nimport distanceInKmBetweenEarthCoordinates from '../Tools/DegreesToRadians';\nimport locationIcon from '../Images/crosshairs-gps.svg';\nimport Button from '@material/react-button';\nfunction QuakeItem(props) {\n\tconst { quake } = props;\n\tconst {properties,geometry} = quake;\n\tconst { dispatch, currLocation, viewport } = useContext(QuakeContext);\n\tlet e = new Date(quake.properties.time);\n\tconst updateViewPort = (element, feature) => {\n\t\tdispatch({ type: 'UPDATED_SELECTED_QUAKE', payload: feature });\n\n\t\tdispatch({\n\t\t\ttype: 'UPDATED_VIEWPORT',\n\t\t\tpayload: {\n\t\t\t\t...viewport,\n\t\t\t\tlongitude: feature.geometry.coordinates[0],\n\t\t\t\tlatitude: feature.geometry.coordinates[1],\n\t\t\t\tzoom: 10\n\t\t\t}\n\t\t});\n\t};\n\t\n\treturn (\n\t\t(properties.mag>=0.0) &&(\n\t\t<li id={quake.id}>\n\t\t\t<div className=\"myGrid\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"magnitude-container\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: matchColorToMag(properties.mag)[0]\n\t\t\t\t\t\t\t? hexToRgb(matchColorToMag(properties.mag)[0].color)\n\t\t\t\t\t\t\t: '#333'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"magnitude-circle\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: matchColorToMag(properties.mag)[0]\n\t\t\t\t\t\t\t\t? matchColorToMag(properties.mag)[0].color\n\t\t\t\t\t\t\t\t: '#333'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"magnitude\">{properties.mag}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ margin: '1em', marginBottom: '0.5em' }}>\n\t\t\t\t\t<div className=\"title\">{properties.place}</div>\n\n\t\t\t\t\t<div className=\"time\">{e.toLocaleString('el-GR')} </div>\n\t\t\t\t\t<div className=\"distance\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{props.currLocation != null ? (\n\t\t\t\t\t\t\t\t`${distanceInKmBetweenEarthCoordinates(\n\t\t\t\t\t\t\t\t\tgeometry.coordinates[1],\n\t\t\t\t\t\t\t\t\tgeometry.coordinates[0],\n\t\t\t\t\t\t\t\t\tcurrLocation.latitude,\n\t\t\t\t\t\t\t\t\tcurrLocation.longitude\n\t\t\t\t\t\t\t\t).toFixed(0)} km from your location`\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t'- km from your locaiton'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<img alt=\"location-icon\" className=\"locationIcon\" src={locationIcon} width=\"18px\" height=\"18px\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tstyle={{ color: matchColorToMag(properties.mag)[0].color }}\n\t\t\t\t\t\tonClick={(e) => updateViewPort(e, quake)}\n\t\t\t\t\t\tchildren=\"no children\"\n\t\t\t\t\t\tclassName=\"\"\n\t\t\t\t\t>\n\t\t\t\t\t\tPin Location\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>)\n\t);\n}\n\nexport default QuakeItem;\n","import React, {useContext}from 'react';\nimport QuakeItem from '../Components/QuakeItem';\nimport QuakeContext from '../Context/QuakeContext';\n\nfunction QuakeList(props) {\n\tconst {quakes,downloadingData} = useContext(QuakeContext);\n\treturn (\n\t\t<ul className=\"quakelist\">\n\t\t{(downloadingData)\n\t\t\t? \"loading\"\n\t\t\t: quakes.map((quake) => {\n\t\t\t\treturn (\n\t\t\t\t\t<QuakeItem key={quake.id} quake={quake}/>\n\t\t\t\t);\n\t\t\t})\n\t\t}\n\t\t</ul>\n\t);\n}\n\nexport default QuakeList;\n","import React from 'react';\n\nexport default React.createContext({\n\tdispatch: ()=>{},\n\tviewport: {},\n\tsetFetchedData:()=>{},\n\tdownloadingData: null,\n});\n","//es6 Class Syntax\n\nclass EarthQuakeUrl {\n  \n  constructor(parameters = {}){\n\n    this.parameters = {\n      starttime: \"2019-10-9\",\n      ...parameters,\n    }\n  }\n  getUrl() {\n    let prefix = `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson`;\n    let properties = Object.getOwnPropertyNames(this.parameters);\n    const values = Object.values(this.parameters);\n    properties = properties.map( (prop,i) => {\n      return `${prop}=${values[i]}`\n    })\n    return [prefix,properties].flat().join('&');\n  }\n}\n\nexport default EarthQuakeUrl;","import React, { useState, useContext } from 'react';\nimport { Row, Col } from 'react-flexbox-grid';\nimport SearchContext from '../Context/SearchContext';\nimport EarthQuakeUrl from '../Tools/EarthQuakeUrl';\nfunction SearchBar(props) {\n\tconst [ suggestions, setSuggestions ] = useState([]);\n\tconst { dispatch, viewport, setFetchedData, toasts } = useContext(SearchContext);\n\n\tconst suggestionsRef = React.createRef();\n\n\tconst onUserInput = (e) => {\n\t\tgetEarlierDate(30);\n\t\tlet val = e.target.value;\n\t\tif (val !== '') {\n\t\t\tfetch(\n\t\t\t\t`https://api.mapbox.com/geocoding/v5/mapbox.places/${e.target\n\t\t\t\t\t.value}.json?&types=country,region&access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`\n\t\t\t)\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconsole.log(data.features);\n\t\t\t\t\tsetSuggestions(data.features);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetSuggestions([]);\n\t\t}\n\t\tconsole.log(e.target.value);\n\t};\n\n\tconst getEarlierDate = (numOfDays) => {\n\t\tconst today = new Date();\n\t\ttoday.setDate(today.getDate() - numOfDays);\n\t\treturn `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`;\n\t};\n\tconst selectPlace = (e,selectedPlace) => {\n\t\tconsole.log(\"ID\",selectedPlace.id);\n\t\tonBlur();\n\t\te.target.parentElement.previousSibling.value = selectedPlace.matching_place_name || selectedPlace.place_name;\n\t\tconsole.log('Selected:', selectedPlace);\n\n\t\tdispatch({\n\t\t\ttype: 'TOGGLE_DATA_DOWNLOADING',\n\t\t\tpayload: true\n\t\t});\n\n\t\tdispatch({\n\t\t\ttype: 'UPDATED_VIEWPORT',\n\t\t\tpayload: {\n\t\t\t\t...viewport,\n\t\t\t\tlongitude: selectedPlace.center[0] + 4,\n\t\t\t\tlatitude: selectedPlace.center[1],\n\t\t\t\tzoom: 6\n\t\t\t}\n\t\t});\n\n\t\tconst url = new EarthQuakeUrl({\n\t\t\tstarttime: getEarlierDate(30),\n\t\t\tminlatitude: selectedPlace.bbox[1],\n\t\t\tminlongitude: selectedPlace.bbox[0],\n\t\t\tmaxlatitude: selectedPlace.bbox[3],\n\t\t\tmaxlongitude: selectedPlace.bbox[2],\n\t\t\tlimit: 50,\n\t\t\torderby: 'time'\n\t\t});\n\n\t\tfetch(url.getUrl())\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log('DATA', data);\n\n\t\t\t\tif (data.features.length === 0) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'UPDATED_TOAST_STACK',\n\t\t\t\t\t\tpayload: [\n\t\t\t\t\t\t\t...toasts,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttimestame: new Date(),\n\t\t\t\t\t\t\t\ttype: \"toast\",\n\t\t\t\t\t\t\t\tvalue: 'No earthquakes found'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsetFetchedData(data.features);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'TOGGLE_DATA_DOWNLOADING',\n\t\t\t\t\tpayload: false\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => console.error(error));\n\n\t\tdispatch({ type: 'UPDATED_SELECTED_REGION', payload: selectedPlace});\n\t};\n\n\tconst onBlur = (e) => {\n\t\tconsole.log(suggestionsRef.current);\n\t\tconsole.log(suggestionsRef.current.style);\n\t\tsuggestionsRef.current.style.visibility = 'hidden';\n\t};\n\n\tconst onFocus = (e) => {\n\t\tsuggestionsRef.current.style.visibility = 'visible';\n\t};\n\treturn (\n\t\t<Row>\n\t\t\t<Col xsOffset={2} sm={10} smOffset={1} mdOffset={2} md={8} xs={8}>\n\t\t\t\t<div id=\"search-container\" className=\"search-bar-container\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"search-field\"\n\t\t\t\t\t\tonFocus={(e) => onFocus(e)}\n\t\t\t\t\t\t// onBlur={(e) => onBlur(e)}\n\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\tonInput={(e) => onUserInput(e)}\n\t\t\t\t\t\tplaceholder=\"Search something\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div id=\"search-bar-suggestion\" ref={suggestionsRef} className=\"search-bar-suggestions\">\n\t\t\t\t\t\t{suggestions.map((sug) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div onClick={(e) => selectPlace(e,sug)} key={sug.id} id={sug.id}>\n\t\t\t\t\t\t\t\t\t\t{sug.matching_place_name || sug.place_name}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Col>\n\t\t</Row>\n\t);\n}\n\nexport default SearchBar;\n","import React, { useState } from 'react';\nconst UserLocation = (props) => {\n\tconst { dispatch, viewport } = props;\n\tconst [ isEnable, setEnable ] = useState(false);\n\n\t\t\n\tconst toggleLocation = () => {\n\t\tif(isEnable) {\n\t\t\tsetEnable(false);\n\t\t\tdocument.getElementsByClassName('location-icon')[0].children[0].setAttribute('fill', '#c3c3c3');\n\t\t\tdispatch({type:'UPDATED_USER_LOCATION',payload:null});\n\t\t\t\n\t\t}else {\n\t\t\tsetEnable(true);\n\t\t\tdocument.getElementById('locationText').style.display = 'inline';\n\t\t\tdocument.getElementsByClassName('location-icon')[0].children[0].setAttribute('fill','#35B4F6');\n\t\t\tgetLocation();\n\t\t}\n\t}\n\tconst getLocation = () => {\n\t\tif (navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\t\tdocument.getElementById('locationText').style.display = 'none';\n\t\t\t\tconsole.log(position.coords);\n\t\t\t\tdispatch({ type: 'UPDATED_USER_LOCATION', payload: position.coords });\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'UPDATED_VIEWPORT',\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\t...viewport,\n\t\t\t\t\t\tlatitude: position.coords.latitude,\n\t\t\t\t\t\tlongitude: position.coords.longitude,\n\t\t\t\t\t\tzoom: 7\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.error('Geolocation is not supported');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div onClick={(e) => toggleLocation(e)} className=\"user-location\">\n\t\t\t<div>\n\t\t\t\tUse my Location{' '}\n\t\t\t\t<span id=\"locationText\" className=\"loading\">\n\t\t\t\t\tloading...\n\t\t\t\t</span>{' '}\n\t\t\t</div>\n\t\t\t<svg className=\"location-icon\" style={{ width: '24px', height: '24px' }} viewBox=\"0 0 30 30\">\n\t\t\t\t<path\n\t\t\t\t\tfill=\"#c3c3c3\"\n\t\t\t\t\td=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M3.05,13H1V11H3.05C3.5,6.83 6.83,3.5 11,3.05V1H13V3.05C17.17,3.5 20.5,6.83 20.95,11H23V13H20.95C20.5,17.17 17.17,20.5 13,20.95V23H11V20.95C6.83,20.5 3.5,17.17 3.05,13M12,5A7,7 0 0,0 5,12A7,7 0 0,0 12,19A7,7 0 0,0 19,12A7,7 0 0,0 12,5Z\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</div>\n\t);\n};\nexport default UserLocation;\n","export const initState = {\n\tcurrLocation: null,\n\tviewport: {\n\t\tlatitude: 45.4221,\n\t\tlongitude: -75.6903,\n\t\twidth: '100%',\n\t\theight: '100vh',\n\t\tzoom: 2\n\t},\n\tfetchedData: [],\n\tselectedQuake: null,\n\tselectedRegion: null,\n\ttoasts: [],\n\tdownloadingData: false,\n};\n\nconst type = {\n\tUPDATED_VIEWPORT: 'UPDATED_VIEWPORT',\n\tUPDATED_SELECTED_QUAKE: 'UPDATED_SELECTED_QUAKE',\n\tUPDATED_SELECTED_REGION: 'UPDATED_SELECTED_REGION',\n\tUPDATED_USER_LOCATION: 'UPDATED_USER_LOCATION',\n\tPUSHED_TOAST: 'PUSHED_TOAST',\n\tUPDATED_TOAST_STACK: 'UPDATED_TOAST_STACK',\n\tTOGGLE_DATA_DOWNLOADING: 'TOGGLE_DATA_DOWNLOADING',\n};\n\nexport const AppReducer = (state, action) => {\n\tconsole.log(\"Action\",action.type,action.payload);\n\tconsole.log(\"State\",state);\n\tswitch (action.type) {\n\t\tcase type.UPDATED_VIEWPORT: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewport: action.payload\n\t\t\t};\n\t\t}\n\t\tcase type.UPDATED_SELECTED_QUAKE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedQuake: action.payload\n\t\t\t};\n\t\t}\n\t\tcase type.UPDATED_SELECTED_REGION: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedRegion: action.payload\n\t\t\t};\n\t\t}\n\t\tcase type.UPDATED_USER_LOCATION: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrLocation: action.payload\n\t\t\t};\n\t\t}\n\t\tcase type.UPDATED_TOAST_STACK: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoasts: action.payload\n\t\t\t};\n\t\t}\n\t\tcase type.TOGGLE_DATA_DOWNLOADING: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdownloadingData: action.payload,\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn {...state}\n\t}\n};\n","import React from 'react';\nfunction ToastStack(props) {\n\tconst { dispatch, toasts } = props;\n\n\treturn (\n\t\t<ul className=\"toast-stack\">\n\t\t\t{toasts.map((toast, i) => {\n\t\t\t\tconsole.log(toast);\n\t\t\t\tif (i === toasts.length - 1) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={toast.timestamp}\n\t\t\t\t\t\t\tonAnimationEndCapture={() => dispatch({ type: 'UPDATED_TOAST_STACK', payload: [] })}\n\t\t\t\t\t\t\tclassName=\"animated-item\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{toast.value}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={toast.timestamp} className=\"animated-item\" >\n\t\t\t\t\t\t\t{toast.value}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})}\n\t\t</ul>\n\t);\n}\n\nexport default ToastStack;\n","import React from 'react';\n\nfunction OfflinePopup() {\n\n\n  return (\n    <div className=\"offline-popup\">\n      <div className=\"offline-popup-wrapper\">\n        <div>No internet connection</div>\n        <div className=\"offline-popup-button\" onClick={()=>window.location.reload()}>Reload</div>\n      </div>\n    </div>\n  );\n}\n\nexport default OfflinePopup;","//TODO: Add url parameter\nimport React, { useReducer, useEffect, useState } from 'react';\nimport ReactMapGL, { Marker, Popup, NavigationControl } from '@urbica/react-map-gl';\nimport Cluster from '@urbica/react-map-gl-cluster';\nimport { matchColorToMag } from '../Tools/magnitudeColors';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport QuakeList from './QuakeList';\nimport SearchBar from './SearchBar';\nimport QuakeContext from '../Context/QuakeContext';\nimport SeachContext from '../Context/SearchContext';\nimport '@material/react-button/dist/button.min.css';\nimport UserLocation from './UserLocation';\nimport { initState, AppReducer } from '../Reducers/AppReducer';\nimport '../fonts.css';\nimport '../App.css';\nimport ToastStack from './ToastStack';\nimport OfflinePopup from './OfflinePopup';\n\n\nfunction MyApp(props) {\n\tconst [ state, dispatch ] = useReducer(AppReducer, initState);\n\tconst [ fetchedData, setFetchedData ] = useState([]);\n\tconst [ appIsOffline, setAppIsOffline ] = useState(false);\n\tconst ClusterMarker = ({ longitude, latitude, pointCount }) => (\n\t\t<Marker longitude={longitude} latitude={latitude}>\n\t\t\t<div className=\"cluster-marker\">{pointCount}</div>\n\t\t</Marker>\n\t);\n\n\tsetInterval(() => {\n\t\tif (navigator.onLine) {\n\t\t\tsetAppIsOffline(false);\n\t\t\t// console.warn('ONLINE');\n\t\t} else {\n\t\t\tsetAppIsOffline(true);\n\t\t\t// console.warn('Offline');\n\t\t}\n\t}, 5000);\n\n  useEffect(()=>{\n    console.log(props.location);\n    const query = new URLSearchParams(props.location.search);\n    console.log(query.get(\"region\"));\n  },[props.location])\n\t// useEffect(() => {\n\t// \tlet myUrl = new EarthQuakeUrl({\n\t// \t\tstarttime: '2019-05-13',\n\t// \t\tlatitude: 35.34,\n\t// \t\tlongitude: 25.13,\n\t// \t\tmaxradiuskm: 500\n\t// \t});\n\n\t// \tfetch(myUrl.getUrl()).then((response) => response.json()).then((data) => {\n\t//     console.log(data);\n\t//     setFetchedData(data.features);\n\t// \t});\n\t// }, []);\n\n\treturn (\n\t\t<Grid fluid>\n\t\t\t<ReactMapGL\n\t\t\t\tlatitude={state.viewport.latitude}\n\t\t\t\tlongitude={state.viewport.longitude}\n\t\t\t\tzoom={state.viewport.zoom}\n\t\t\t\tstyle={{ width: '100%', height: '100vh' }}\n\t\t\t\taccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n\t\t\t\tmapStyle=\"mapbox://styles/elefcodes/cjvz1805a00cq1clmiekbyx1p\"\n\t\t\t\tonViewportChange={(viewport) => {\n\t\t\t\t\tdispatch({ type: 'UPDATED_VIEWPORT', payload: viewport });\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{state.currLocation != null ? (\n\t\t\t\t\t<Marker latitude={state.currLocation.latitude} longitude={state.currLocation.longitude}>\n\t\t\t\t\t\t<div className=\"marker-btn mylocation\" />\n\t\t\t\t\t</Marker>\n\t\t\t\t) : null}\n\n\t\t\t\t<Cluster raduis={40} extent={512} nodeSize={64} component={ClusterMarker}>\n\t\t\t\t\t{fetchedData.map((quake) => (\n\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\tkey={quake.id}\n\t\t\t\t\t\t\tlatitude={quake.geometry.coordinates[1]}\n\t\t\t\t\t\t\tlongitude={quake.geometry.coordinates[0]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"marker-btn\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundColor: matchColorToMag(quake.properties.mag)[0]\n\t\t\t\t\t\t\t\t\t\t? matchColorToMag(quake.properties.mag)[0].color\n\t\t\t\t\t\t\t\t\t\t: '#333'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\tdispatch({ type: 'UPDATED_SELECTED_QUAKE', payload: quake });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Marker>\n\t\t\t\t\t))}\n\t\t\t\t</Cluster>\n\n\t\t\t\t{state.selectedQuake && (\n\t\t\t\t\t<Popup\n\t\t\t\t\t\tlatitude={state.selectedQuake.geometry.coordinates[1]}\n\t\t\t\t\t\tlongitude={state.selectedQuake.geometry.coordinates[0]}\n\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\tdispatch({ type: 'UPDATED_SELECTED_QUAKE', payload: null });\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>{state.selectedQuake.properties.title}</div>\n\t\t\t\t\t</Popup>\n\t\t\t\t)}\n\n\t\t\t\t<NavigationControl showCompass showZoom position=\"bottom-left\" />\n\n\t\t\t\t{appIsOffline && (\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs={12}>\n\t\t\t\t\t\t\t<OfflinePopup />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t)}\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={9} md={9} sm={7}>\n\t\t\t\t\t\t<SeachContext.Provider\n\t\t\t\t\t\t\tvalue={{\n\t\t\t\t\t\t\t\tdispatch: dispatch,\n\t\t\t\t\t\t\t\tsetFetchedData: setFetchedData,\n\t\t\t\t\t\t\t\tviewport: state.viewport,\n\t\t\t\t\t\t\t\tdownloadingData: state.downloadingData,\n\t\t\t\t\t\t\t\ttoasts: state.toasts\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SearchBar />\n\t\t\t\t\t\t</SeachContext.Provider>\n\t\t\t\t\t\t<ToastStack dispatch={dispatch} toasts={state.toasts} />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={3} md={3} sm={5}>\n\t\t\t\t\t\t<UserLocation dispatch={dispatch} viewport={state.viewport} />\n\t\t\t\t\t\t<QuakeContext.Provider\n\t\t\t\t\t\t\tvalue={{\n\t\t\t\t\t\t\t\tdispatch: dispatch,\n\t\t\t\t\t\t\t\tviewport: state.viewport,\n\t\t\t\t\t\t\t\tcurrLocation: state.currLocation,\n\t\t\t\t\t\t\t\tquakes: fetchedData,\n\t\t\t\t\t\t\t\tdownloadingData: state.downloadingData\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<QuakeList />\n\t\t\t\t\t\t</QuakeContext.Provider>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</ReactMapGL>\n\t\t</Grid>\n\t);\n}\n\nexport default MyApp;\n","//TODO: Add url parameter\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport MyApp from '../src/Components/MyApp';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Route path=\"/\" component={MyApp} />\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}