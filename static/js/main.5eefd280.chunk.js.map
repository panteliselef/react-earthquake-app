{"version":3,"sources":["Images/metadata-img.png","Images/crosshairs-gps.svg","Context/QuakeContext.js","Tools/Utils.js","Components/QuakeItem.js","Components/QuakeList.js","Context/SearchContext.js","Components/SearchBar.js","Components/UserLocation.js","Reducers/AppReducer.js","Components/ToastStack.js","Components/OfflinePopup.js","Components/MyApp.js","Components/MetaTags.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","React","createContext","dispatch","viewport","currLocation","quakes","getEarlierDate","numOfDays","today","Date","setDate","getDate","concat","getFullYear","getMonth","EarthQuakeUrl","parameters","arguments","length","undefined","Object","classCallCheck","this","objectSpread","starttime","properties","getOwnPropertyNames","values","map","prop","i","flat","join","degreesToRadians","degrees","Math","PI","distanceInKmBetweenEarthCoordinates","lat1","lon1","lat2","lon2","dLat","dLon","a","sin","cos","atan2","sqrt","matchColorToMag","mag","magnitudeColors","filter","item","minValue","maxValue","hexToRgb","hex","result","exec","parseInt","color","QuakeItem","props","quake","geometry","_useContext","useContext","QuakeContext","e","time","react_default","createElement","id","className","style","backgroundColor","margin","marginBottom","place","toLocaleString","coordinates","latitude","longitude","toFixed","alt","src","locationIcon","width","height","dist_default","onClick","type","payload","feature","zoom","children","QuakeList","downloadingData","Components_QuakeItem","key","setFetchedData","withRouter","_useState","useState","_useState2","slicedToArray","suggestions","setSuggestions","SearchContext","queryObject","suggestionsRef","createRef","searchInputRef","useEffect","current","value","place_name","lib","xsOffset","sm","smOffset","mdOffset","md","xs","ref","onFocus","opacity","onBlur","onInput","target","fetch","process","then","response","json","data","features","onUserInput","placeholder","sug","selectedPlace","parentElement","previousSibling","matching_place_name","history","push","bbox","center","selectPlace","UserLocation","toasts","isEnable","setEnable","getLocation","navigator","geolocation","getCurrentPosition","position","document","getElementById","display","coords","error","errorMsg","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","toConsumableArray","timestamp","getElementsByClassName","setAttribute","viewBox","fill","d","initState","fetchedData","selectedQuake","selectedRegion","AppReducer","state","action","console","log","ToastStack","toast","onAnimationEndCapture","OfflinePopup","window","location","reload","MyApp","_useReducer","useReducer","_useReducer2","_useState3","_useState4","appIsOffline","setAppIsOffline","setInterval","onLine","query","URLSearchParams","search","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","keys","Symbol","iterator","next","done","get","err","return","entries","constructor","findEarthQuakes","url","minlatitude","mnlat","minlongitude","mnlon","maxlatitude","mxlat","maxlongitude","mxlon","limit","orderby","clon","clat","getUrl","catch","fluid","react_map_gl_esm","accessToken","mapStyle","onViewportChange","react_map_gl_cluster_esm","raduis","extent","nodeSize","component","_ref","pointCount","preventDefault","onClose","title","showCompass","showZoom","Components_OfflinePopup","Provider","Components_SearchBar","Components_ToastStack","Components_UserLocation","Components_QuakeList","MetaTags","Helmet","name","content","property","metaDataImg","App","Fragment","Components_MetaTags","react_router_dom","react_router","path","Boolean","hostname","match","ReactDOM","render","src_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5eefd280.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/metadata-img.1977d45a.png\";","module.exports = __webpack_public_path__ + \"static/media/crosshairs-gps.27b7eeac.svg\";","import React from 'react';\n\nexport default React.createContext({\n\tdispatch: ()=>{},\n\tviewport: {},\n\tcurrLocation: {},\n\tquakes:[]\n});\n","export const getEarlierDate = (numOfDays) => {\n\tconst today = new Date();\n\ttoday.setDate(today.getDate() - numOfDays);\n\treturn `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`;\n};\n\nexport default class EarthQuakeUrl {\n\tconstructor(parameters = {}) {\n\t\tthis.parameters = {\n\t\t\tstarttime: '2019-10-9',\n\t\t\t...parameters\n\t\t};\n\t}\n\tgetUrl() {\n\t\tlet prefix = `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson`;\n\t\tlet properties = Object.getOwnPropertyNames(this.parameters);\n\t\tconst values = Object.values(this.parameters);\n\t\tproperties = properties.map((prop, i) => {\n\t\t\treturn `${prop}=${values[i]}`;\n\t\t});\n\t\treturn [ prefix, properties ].flat().join('&');\n\t}\n}\n\nfunction degreesToRadians(degrees) {\n\treturn degrees * Math.PI / 180;\n}\n\nexport const distanceInKmBetweenEarthCoordinates = (lat1, lon1, lat2, lon2) => {\n\tvar earthRadiusKm = 6371;\n\n\tvar dLat = degreesToRadians(lat2 - lat1);\n\tvar dLon = degreesToRadians(lon2 - lon1);\n\n\tlat1 = degreesToRadians(lat1);\n\tlat2 = degreesToRadians(lat2);\n\n\tvar a =\n\t\tMath.sin(dLat / 2) * Math.sin(dLat / 2) +\n\t\tMath.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\treturn earthRadiusKm * c;\n};\n\n\nexport const matchColorToMag = (mag) => {\n\treturn magnitudeColors.filter((item) => {\n\t\treturn item.minValue <= mag && item.maxValue > mag;\n\t});\n};\n\nexport const hexToRgb = (hex) => {\n\tlet result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\treturn result ? `rgba(${parseInt(result[1], 16)},${parseInt(result[2], 16)},${parseInt(result[3], 16)},0.4)` : null;\n};\n\nexport const magnitudeColors = [\n\t{\n\t\tminValue: 0,\n\t\tmaxValue: 2,\n\t\tcolor: '#4A7BA7'\n\t},\n\t{\n\t\tminValue: 2,\n\t\tmaxValue: 3,\n\t\tcolor: '#04B4B3'\n\t},\n\t{\n\t\tminValue: 3,\n\t\tmaxValue: 4,\n\t\tcolor: '#10CAC9'\n\t},\n\t{\n\t\tminValue: 4,\n\t\tmaxValue: 5,\n\t\tcolor: '#F5A623'\n\t},\n\t{\n\t\tminValue: 5,\n\t\tmaxValue: 6,\n\t\tcolor: '#FF7D50'\n\t},\n\t{\n\t\tminValue: 6,\n\t\tmaxValue: 7,\n\t\tcolor: '#FC6644'\n\t},\n\t{\n\t\tminValue: 7,\n\t\tmaxValue: 8,\n\t\tcolor: '#E75F40'\n\t},\n\t{\n\t\tminValue: 8,\n\t\tmaxValue: 9,\n\t\tcolor: '#E13A20'\n\t},\n\t{\n\t\tminValue: 9,\n\t\tmaxValue: 10,\n\t\tcolor: '#D93218'\n\t},\n\t{\n\t\tminValue: 10,\n\t\tmaxValue: 20,\n\t\tcolor: '#C03823'\n\t}\n];\n\n","import React, { useContext } from 'react';\nimport QuakeContext from '../Context/QuakeContext';\nimport { distanceInKmBetweenEarthCoordinates, matchColorToMag,hexToRgb} from '../Tools/Utils';\nimport locationIcon from '../Images/crosshairs-gps.svg';\nimport Button from '@material/react-button';\nfunction QuakeItem(props) {\n\tconst { quake } = props;\n\tconst {properties,geometry} = quake;\n\tconst { dispatch, currLocation, viewport } = useContext(QuakeContext);\n\tlet e = new Date(quake.properties.time);\n\tconst updateViewPort = (element, feature) => {\n\t\tdispatch({ type: 'UPDATED_SELECTED_QUAKE', payload: feature });\n\n\t\tdispatch({\n\t\t\ttype: 'UPDATED_VIEWPORT',\n\t\t\tpayload: {\n\t\t\t\t...viewport,\n\t\t\t\tlongitude: feature.geometry.coordinates[0],\n\t\t\t\tlatitude: feature.geometry.coordinates[1],\n\t\t\t\tzoom: 10\n\t\t\t}\n\t\t});\n\t};\n\t\n\treturn (\n\t\t(properties.mag>=0.0) &&(\n\t\t<li id={quake.id}>\n\t\t\t<div className=\"myGrid\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"magnitude-container\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: matchColorToMag(properties.mag)[0]\n\t\t\t\t\t\t\t? hexToRgb(matchColorToMag(properties.mag)[0].color)\n\t\t\t\t\t\t\t: '#333'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"magnitude-circle\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: matchColorToMag(properties.mag)[0]\n\t\t\t\t\t\t\t\t? matchColorToMag(properties.mag)[0].color\n\t\t\t\t\t\t\t\t: '#333'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"magnitude\">{properties.mag}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ margin: '1em', marginBottom: '0.5em' }}>\n\t\t\t\t\t<div className=\"title\">{properties.place}</div>\n\n\t\t\t\t\t<div className=\"time\">{e.toLocaleString('el-GR')} </div>\n\t\t\t\t\t<div className=\"distance\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{props.currLocation != null ? (\n\t\t\t\t\t\t\t\t`${distanceInKmBetweenEarthCoordinates(\n\t\t\t\t\t\t\t\t\tgeometry.coordinates[1],\n\t\t\t\t\t\t\t\t\tgeometry.coordinates[0],\n\t\t\t\t\t\t\t\t\tcurrLocation.latitude,\n\t\t\t\t\t\t\t\t\tcurrLocation.longitude\n\t\t\t\t\t\t\t\t).toFixed(0)} km from your location`\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t'- km from your locaiton'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<img alt=\"location-icon\" className=\"locationIcon\" src={locationIcon} width=\"18px\" height=\"18px\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tstyle={{ color: matchColorToMag(properties.mag)[0].color }}\n\t\t\t\t\t\tonClick={(e) => updateViewPort(e, quake)}\n\t\t\t\t\t\tchildren=\"no children\"\n\t\t\t\t\t\tclassName=\"\"\n\t\t\t\t\t>\n\t\t\t\t\t\tPin Location\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>)\n\t);\n}\n\nexport default QuakeItem;\n","import React, {useContext}from 'react';\nimport QuakeItem from '../Components/QuakeItem';\nimport QuakeContext from '../Context/QuakeContext';\n\nfunction QuakeList(props) {\n\tconst {quakes,downloadingData} = useContext(QuakeContext);\n\treturn (\n\t\t<ul className=\"quakelist\">\n\t\t{(downloadingData)\n\t\t\t? \"loading\"\n\t\t\t: quakes.map((quake) => {\n\t\t\t\treturn (\n\t\t\t\t\t<QuakeItem key={quake.id} quake={quake}/>\n\t\t\t\t);\n\t\t\t})\n\t\t}\n\t\t</ul>\n\t);\n}\n\nexport default QuakeList;\n","import React from 'react';\n\nexport default React.createContext({\n\tdispatch: ()=>{},\n\tviewport: {},\n\tsetFetchedData:()=>{},\n\tdownloadingData: null,\n});\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Row, Col } from 'react-flexbox-grid';\nimport SearchContext from '../Context/SearchContext';\nimport { withRouter } from 'react-router-dom';\nimport {getEarlierDate} from '../Tools/Utils';\nfunction SearchBar(props) {\n\tconst [ suggestions, setSuggestions ] = useState([]);\n\tconst { dispatch, queryObject } = useContext(SearchContext);\n\n\tconst suggestionsRef = React.createRef();\n\tconst searchInputRef = React.createRef();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsearchInputRef.current.value = queryObject.place_name || \"\";\n\t\t},\n\t\t[]\n\t);\n\n\tconst onUserInput = (e) => {\n\t\tgetEarlierDate(30);\n\t\tlet val = e.target.value;\n\t\tif (val !== '') {\n\t\t\tfetch(\n\t\t\t\t`https://api.mapbox.com/geocoding/v5/mapbox.places/${e.target\n\t\t\t\t\t.value}.json?&types=country,region&access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`\n\t\t\t)\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetSuggestions(data.features);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetSuggestions([]);\n\t\t}\n\t};\n\n\tconst selectPlace = (e, selectedPlace) => {\n\t\tsetSuggestions([]);\n\t\te.target.parentElement.previousSibling.value = selectedPlace.matching_place_name || selectedPlace.place_name;\n\t\tprops.history.push(\n\t\t\t`?&place_name=${selectedPlace.matching_place_name || selectedPlace.place_name}&mnlat=${selectedPlace\n\t\t\t\t.bbox[1]}&mnlon=${selectedPlace.bbox[0]}&mxlat=${selectedPlace.bbox[3]}&mxlon=${selectedPlace\n\t\t\t\t.bbox[2]}&clon=${selectedPlace.center[0]}&clat=${selectedPlace.center[1]}`\n\t\t);\n\t\tdispatch({ type: 'UPDATED_SELECTED_REGION', payload: selectedPlace });\n\t};\n\n\tconst onBlur = (e) => {\n\t\tsuggestionsRef.current.style.opacity = '0';\n\t};\n\n\tconst onFocus = (e) => {\n\t\tsuggestionsRef.current.style.opacity = '1';\n\t};\n\treturn (\n\t\t<Row>\n\t\t\t<Col xsOffset={2} sm={10} smOffset={1} mdOffset={9} md={3} xs={8}>\n\t\t\t\t<div id=\"search-container\" className=\"search-bar-container\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={searchInputRef}\n\t\t\t\t\t\tid=\"search-field\"\n\t\t\t\t\t\tonFocus={(e) => onFocus(e)}\n\t\t\t\t\t\tonBlur={(e) => onBlur(e)}\n\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\tonInput={(e) => onUserInput(e)}\n\t\t\t\t\t\tplaceholder=\"Search something\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div id=\"search-bar-suggestion\" ref={suggestionsRef} className=\"search-bar-suggestions\">\n\t\t\t\t\t\t{suggestions.map((sug) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div onClick={(e) => selectPlace(e, sug)} key={sug.id} id={sug.id}>\n\t\t\t\t\t\t\t\t\t{sug.matching_place_name || sug.place_name}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Col>\n\t\t</Row>\n\t);\n}\nexport default withRouter(SearchBar);\n","import React, { useState } from 'react';\nconst UserLocation = (props) => {\n\tconst { dispatch, viewport, toasts } = props;\n\tconst [ isEnable, setEnable ] = useState(false);\n\n\tconst toggleLocation = () => {\n\t\tif (isEnable) {\n\t\t\tsetEnable(false);\n\t\t\tdocument.getElementsByClassName('location-icon')[0].children[0].setAttribute('fill', '#c3c3c3');\n\t\t\tdispatch({ type: 'UPDATED_USER_LOCATION', payload: null });\n\t\t} else {\n\t\t\tsetEnable(true);\n\t\t\tdocument.getElementById('locationText').style.display = 'inline';\n\t\t\tdocument.getElementsByClassName('location-icon')[0].children[0].setAttribute('fill', '#35B4F6');\n\t\t\tgetLocation();\n\t\t}\n\t};\n\n\tconst getLocation = () => {\n\t\tif (navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\tfunction success(position) {\n\t\t\t\t\tdocument.getElementById('locationText').style.display = 'none';\n\t\t\t\t\tdispatch({ type: 'UPDATED_USER_LOCATION', payload: position.coords });\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'UPDATED_VIEWPORT',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t...viewport,\n\t\t\t\t\t\t\tlatitude: position.coords.latitude,\n\t\t\t\t\t\t\tlongitude: position.coords.longitude,\n\t\t\t\t\t\t\tzoom: 7\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tlet errorMsg;\n\t\t\t\t\tswitch (error.code) {\n\t\t\t\t\t\tcase error.PERMISSION_DENIED:\n\t\t\t\t\t\t\terrorMsg = 'User denied the request for Geolocation.';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase error.POSITION_UNAVAILABLE:\n\t\t\t\t\t\t\terrorMsg = 'Location information is unavailable.';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase error.TIMEOUT:\n\t\t\t\t\t\t\terrorMsg = 'The request to get user location timed out.';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase error.UNKNOWN_ERROR:\n\t\t\t\t\t\t\terrorMsg = 'An unknown error occurred.';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\terrorMsg = 'An unknown error occurred.';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'UPDATED_TOAST_STACK',\n\t\t\t\t\t\tpayload: [\n\t\t\t\t\t\t\t...toasts,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttimestamp: new Date(),\n\t\t\t\t\t\t\t\ttype: 'toast',\n\t\t\t\t\t\t\t\tvalue: errorMsg\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\t\t\t\t\tdocument.getElementById('locationText').style.display = 'none';\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: 'UPDATED_TOAST_STACK',\n\t\t\t\tpayload: [\n\t\t\t\t\t...toasts,\n\t\t\t\t\t{\n\t\t\t\t\t\ttimestamp: new Date(),\n\t\t\t\t\t\ttype: 'toast',\n\t\t\t\t\t\tvalue: 'Geolocation is not supported'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<div onClick={(e) => toggleLocation(e)} className=\"user-location\">\n\t\t\t<div>\n\t\t\t\tUse my Location{' '}\n\t\t\t\t<span id=\"locationText\" className=\"loading\">\n\t\t\t\t\tloading...\n\t\t\t\t</span>{' '}\n\t\t\t</div>\n\t\t\t<svg className=\"location-icon\" style={{ width: '20px', height: '20px' }} viewBox=\"0 0 20 20\">\n\t\t\t\t<path\n\t\t\t\t\tfill=\"#c3c3c3\"\n\t\t\t\t\td=\"M10,6.36363636 C12.0083082,6.36363636 13.6363636,7.99169182 13.6363636,10 C13.6363636,12.0083082 12.0083082,13.6363636 10,13.6363636 C7.99169182,13.6363636 6.36363636,12.0083082 6.36363636,10 C6.36363636,7.99169182 7.99169182,6.36363636 10,6.36363636 Z M1.86363636,10.9090909 L0,10.9090909 L0,9.09090909 L1.86363636,9.09090909 C2.27272727,5.3 5.3,2.27272727 9.09090909,1.86363636 L9.09090909,0 L10.9090909,0 L10.9090909,1.86363636 C14.7,2.27272727 17.7272727,5.3 18.1363636,9.09090909 L20,9.09090909 L20,10.9090909 L18.1363636,10.9090909 C17.7272727,14.7 14.7,17.7272727 10.9090909,18.1363636 L10.9090909,20 L9.09090909,20 L9.09090909,18.1363636 C5.3,17.7272727 2.27272727,14.7 1.86363636,10.9090909 Z M10,3.63636364 C6.48546068,3.63636364 3.63636364,6.48546068 3.63636364,10 C3.63636364,13.5145393 6.48546068,16.3636364 10,16.3636364 C13.5145393,16.3636364 16.3636364,13.5145393 16.3636364,10 C16.3636364,6.48546068 13.5145393,3.63636364 10,3.63636364 Z\"\n\t\t\t\t\tid=\"Shape\"\n\t\t\t\t/>\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</div>\n\t);\n};\nexport default UserLocation;\n","export const initState = {\n\tcurrLocation: null,\n\tviewport: {\n\t\tlatitude: 45.4221,\n\t\tlongitude: -75.6903,\n\t\twidth: '100%',\n\t\theight: '100vh',\n\t\tzoom: 2\n\t},\n\tfetchedData: [],\n\tselectedQuake: null,\n\tselectedRegion: null,\n\ttoasts: [],\n\tdownloadingData: false,\n\tqueryObject: {}\n};\n\nconst type = {\n\tUPDATED_VIEWPORT: 'UPDATED_VIEWPORT',\n\tUPDATED_SELECTED_QUAKE: 'UPDATED_SELECTED_QUAKE',\n\tUPDATED_SELECTED_REGION: 'UPDATED_SELECTED_REGION',\n\tUPDATED_USER_LOCATION: 'UPDATED_USER_LOCATION',\n\tUPDATED_TOAST_STACK: 'UPDATED_TOAST_STACK',\n\tTOGGLE_DATA_DOWNLOADING: 'TOGGLE_DATA_DOWNLOADING',\n\tUPDATED_QUERY_OBJECT: 'UPDATED_QUERY_OBJECT'\n};\n\nexport const AppReducer = (state, action) => {\n\tconsole.log(\"Action\",action.type,action.payload);\n\tconsole.log(\"State\",state);\n\tswitch (action.type) {\n\t\tcase type.UPDATED_VIEWPORT: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewport: action.payload\n\t\t\t};\n\t\t}\n\t\tcase type.UPDATED_SELECTED_QUAKE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedQuake: action.payload\n\t\t\t};\n\t\t}\n\t\tcase type.UPDATED_SELECTED_REGION: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedRegion: action.payload\n\t\t\t};\n\t\t}\n\t\tcase type.UPDATED_USER_LOCATION: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrLocation: action.payload\n\t\t\t};\n\t\t}\n\t\tcase type.UPDATED_TOAST_STACK: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoasts: action.payload\n\t\t\t};\n\t\t}\n\t\tcase type.TOGGLE_DATA_DOWNLOADING: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdownloadingData: action.payload,\n\t\t\t}\n\t\t}\n\t\tcase type.UPDATED_QUERY_OBJECT: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tqueryObject: action.payload\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn {...state}\n\t}\n};\n","import React from 'react';\nfunction ToastStack(props) {\n\tconst { dispatch, toasts } = props;\n\treturn (\n\t\t<ul className=\"toast-stack\">\n\t\t\t{toasts.map((toast, i) => {\n\t\t\t\tif (i === toasts.length - 1) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={toast.timestamp}\n\t\t\t\t\t\t\tonAnimationEndCapture={() => dispatch({ type: 'UPDATED_TOAST_STACK', payload: [] })}\n\t\t\t\t\t\t\tclassName=\"animated-item\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{toast.value}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={toast.timestamp} className=\"animated-item\" >\n\t\t\t\t\t\t\t{toast.value}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})}\n\t\t</ul>\n\t);\n}\n\nexport default ToastStack;\n","import React from 'react';\n\nfunction OfflinePopup() {\n\n\n  return (\n    <div className=\"offline-popup\">\n      <div className=\"offline-popup-wrapper\">\n        <div>No internet connection</div>\n        <div className=\"offline-popup-button\" onClick={()=>window.location.reload()}>Reload</div>\n      </div>\n    </div>\n  );\n}\n\nexport default OfflinePopup;","// React\nimport React, { useReducer, useEffect, useState } from 'react';\n// MapBox\nimport ReactMapGL, { Marker, Popup, NavigationControl } from '@urbica/react-map-gl';\nimport Cluster from '@urbica/react-map-gl-cluster';\n// CSS Grid\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n// My Components\nimport QuakeList from './QuakeList';\nimport SearchBar from './SearchBar';\nimport QuakeContext from '../Context/QuakeContext';\nimport SeachContext from '../Context/SearchContext';\nimport UserLocation from './UserLocation';\nimport { initState, AppReducer } from '../Reducers/AppReducer';\nimport ToastStack from './ToastStack';\nimport OfflinePopup from './OfflinePopup';\n// Utils\nimport EarthQuakeUrl, {getEarlierDate,matchColorToMag} from '../Tools/Utils';\n// CSS\nimport '@material/react-button/dist/button.min.css';\nimport '../fonts.css';\nimport '../App.css';\n\n\nfunction MyApp(props) {\n\tconst [ state, dispatch ] = useReducer(AppReducer, initState);\n\tconst [ fetchedData, setFetchedData ] = useState([]);\n\tconst [ appIsOffline, setAppIsOffline ] = useState(false);\n\tconst ClusterMarker = ({ longitude, latitude, pointCount }) => (\n\t\t<Marker longitude={longitude} latitude={latitude}>\n\t\t\t<div className=\"cluster-marker\">{pointCount}</div>\n\t\t</Marker>\n\t);\n\n\tsetInterval(() => {\n\t\tif (navigator.onLine) {\n\t\t\tsetAppIsOffline(false);\n\t\t} else {\n\t\t\tsetAppIsOffline(true);\n\t\t}\n\t}, 5000);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst query = new URLSearchParams(props.location.search);\n\t\t\tlet queryObject = {};\n\t\t\tfor (let value of query.keys()) {\n\t\t\t\tqueryObject[value] = query.get(value);\n\t\t\t\tconsole.log(value, query.get(value));\n\t\t\t}\n\t\t\tconsole.log(queryObject);\n\t\t\tif(Object.entries(queryObject).length === 0 && queryObject.constructor === Object) {\n\t\t\t\t//NO QUERIES FOUND\n\t\t\t}else {\n\t\t\t\tfindEarthQuakes(queryObject);\n\t\t\t}\n\t\t\tdispatch({ type: 'UPDATED_QUERY_OBJECT', payload: queryObject });\n\t\t},\n\t\t[ props.location ]\n\t);\n\n\tconst findEarthQuakes = (queryObject) => {\n\t\tconst url = new EarthQuakeUrl({\n\t\t\tstarttime: getEarlierDate(30),\n\t\t\tminlatitude: queryObject.mnlat,\n\t\t\tminlongitude: queryObject.mnlon,\n\t\t\tmaxlatitude: queryObject.mxlat,\n\t\t\tmaxlongitude: queryObject.mxlon,\n\t\t\tlimit: 50,\n\t\t\torderby: 'time'\n\t\t});\n\n\t\tdispatch({\n\t\t\ttype: 'TOGGLE_DATA_DOWNLOADING',\n\t\t\tpayload: true\n\t\t});\n\n\t\tdispatch({\n\t\t\ttype: 'UPDATED_VIEWPORT',\n\t\t\tpayload: {\n\t\t\t\t...state.viewport,\n\t\t\t\tlongitude: +queryObject.clon + 4,\n\t\t\t\tlatitude: +queryObject.clat,\n\t\t\t\tzoom: 6\n\t\t\t}\n\t\t});\n\n\t\tfetch(url.getUrl())\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tif (data.features.length === 0) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'UPDATED_TOAST_STACK',\n\t\t\t\t\t\tpayload: [\n\t\t\t\t\t\t\t...state.toasts,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttimestamp: new Date(),\n\t\t\t\t\t\t\t\ttype: 'toast',\n\t\t\t\t\t\t\t\tvalue: 'No earthquakes found'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsetFetchedData(data.features);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'TOGGLE_DATA_DOWNLOADING',\n\t\t\t\t\tpayload: false\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => console.error(error));\n\t};\n\treturn (\n\t\t<Grid fluid>\n\t\t\t<ReactMapGL\n\t\t\t\tlatitude={state.viewport.latitude}\n\t\t\t\tlongitude={state.viewport.longitude}\n\t\t\t\tzoom={state.viewport.zoom}\n\t\t\t\tstyle={{ width: '100%', height: '100vh' }}\n\t\t\t\taccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n\t\t\t\tmapStyle=\"mapbox://styles/elefcodes/cjvz1805a00cq1clmiekbyx1p\"\n\t\t\t\tonViewportChange={(viewport) => {\n\t\t\t\t\tdispatch({ type: 'UPDATED_VIEWPORT', payload: viewport });\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{state.currLocation != null ? (\n\t\t\t\t\t<Marker latitude={state.currLocation.latitude} longitude={state.currLocation.longitude}>\n\t\t\t\t\t\t<div className=\"marker-btn mylocation\" />\n\t\t\t\t\t</Marker>\n\t\t\t\t) : null}\n\n\t\t\t\t<Cluster raduis={40} extent={512} nodeSize={64} component={ClusterMarker}>\n\t\t\t\t\t{fetchedData.map((quake) => (\n\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\tkey={quake.id}\n\t\t\t\t\t\t\tlatitude={quake.geometry.coordinates[1]}\n\t\t\t\t\t\t\tlongitude={quake.geometry.coordinates[0]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"marker-btn\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundColor: matchColorToMag(quake.properties.mag)[0]\n\t\t\t\t\t\t\t\t\t\t? matchColorToMag(quake.properties.mag)[0].color\n\t\t\t\t\t\t\t\t\t\t: '#333'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\tdispatch({ type: 'UPDATED_SELECTED_QUAKE', payload: quake });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Marker>\n\t\t\t\t\t))}\n\t\t\t\t</Cluster>\n\n\t\t\t\t{state.selectedQuake && (\n\t\t\t\t\t<Popup\n\t\t\t\t\t\tlatitude={state.selectedQuake.geometry.coordinates[1]}\n\t\t\t\t\t\tlongitude={state.selectedQuake.geometry.coordinates[0]}\n\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\tdispatch({ type: 'UPDATED_SELECTED_QUAKE', payload: null });\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>{state.selectedQuake.properties.title}</div>\n\t\t\t\t\t</Popup>\n\t\t\t\t)}\n\n\t\t\t\t<NavigationControl showCompass showZoom position=\"bottom-left\" />\n\n\t\t\t\t{appIsOffline && (\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs={12}>\n\t\t\t\t\t\t\t<OfflinePopup />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t)}\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xsOffset={0} xs={12} md={9} smOffset={1} mdOffset={0} sm={10}>\n\t\t\t\t\t\t<SeachContext.Provider\n\t\t\t\t\t\t\tvalue={{\n\t\t\t\t\t\t\t\tdispatch: dispatch,\n\t\t\t\t\t\t\t\tqueryObject:state.queryObject\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SearchBar />\n\t\t\t\t\t\t</SeachContext.Provider>\n\t\t\t\t\t\t<ToastStack dispatch={dispatch} toasts={state.toasts} />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xsOffset={1} xs={10} mdOffset={0} md={3} smOffset={2} sm={8}>\n\t\t\t\t\t\t<div className=\"mobile-view\">\n\t\t\t\t\t\t\t<UserLocation dispatch={dispatch} viewport={state.viewport} toasts={state.toasts}/>\n\t\t\t\t\t\t\t<QuakeContext.Provider\n\t\t\t\t\t\t\t\tvalue={{\n\t\t\t\t\t\t\t\t\tdispatch: dispatch,\n\t\t\t\t\t\t\t\t\tviewport: state.viewport,\n\t\t\t\t\t\t\t\t\tcurrLocation: state.currLocation,\n\t\t\t\t\t\t\t\t\tquakes: fetchedData,\n\t\t\t\t\t\t\t\t\tdownloadingData: state.downloadingData\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<QuakeList />\n\t\t\t\t\t\t\t</QuakeContext.Provider>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</ReactMapGL>\n\t\t</Grid>\n\t);\n}\n\nexport default MyApp;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport metaDataImg from '../Images/metadata-img.png'\nfunction MetaTags() {\n\treturn (\n\t\t<Helmet>\n\t\t\t<title>Earthquakes from All Over The Wolrd</title>\n\t\t\t<meta name=\"title\" content=\"Earthquakes from All Over The Wolrd\" />\n\t\t\t<meta\n\t\t\t\tname=\"description\"\n\t\t\t\tcontent=\"Search for the most recent earthquakes all over the earth. Use your location to check if an earthquake occurred nearby you.\"\n\t\t\t/>\n\n\t\t\t<meta property=\"og:type\" content=\"website\" />\n\t\t\t<meta property=\"og:url\" content=\"https://panteliselef.github.io/react-earthquake-app/\" />\n\t\t\t<meta property=\"og:title\" content=\"Earthquakes from All Over The Wolrd\" />\n\t\t\t<meta\n\t\t\t\tproperty=\"og:description\"\n\t\t\t\tcontent=\"Search for the most recent earthquakes all over the earth. Use your location to check if an earthquake occurred nearby you.\"\n\t\t\t/>\n\t\t\t<meta property=\"og:image\" content={metaDataImg} />\n\n\t\t\t<meta property=\"twitter:card\" content=\"summary_large_image\" />\n\t\t\t<meta property=\"twitter:url\" content=\"https://panteliselef.github.io/react-earthquake-app/\" />\n\t\t\t<meta property=\"twitter:title\" content=\"Earthquakes from All Over The Wolrd\" />\n\t\t\t<meta\n\t\t\t\tproperty=\"twitter:description\"\n\t\t\t\tcontent=\"Search for the most recent earthquakes all over the earth. Use your location to check if an earthquake occurred nearby you.\"\n\t\t\t/>\n\t\t\t<meta property=\"twitter:image\" content={metaDataImg} />\n\t\t</Helmet>\n\t);\n}\n\nexport default MetaTags;\n","//TODO: Add url parameter\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport MyApp from '../src/Components/MyApp';\nimport MetaTags from './Components/MetaTags';\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<MetaTags/>\n\t\t\t<Router>\n\t\t\t\t<Route path=\"/\" component={MyApp} />\n\t\t\t</Router>\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}